name: Py Blog Api DRF CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  tests:
  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
        # django-version: [4.0, 4.2.4]

    steps:
    - uses: actions/checkout@v3

    - name: Setup python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run Docker Compose (just to ensure services are up)
      run: docker-compose up -d

    - name: Install dependencies
      run: docker-compose exec -T -u root app poetry install --no-interaction --no-ansi

    - name: Activate virtual environment and run Django tests
      run: |
        docker-compose exec -T app bash -c "source .venv/bin/activate && python manage.py test"

    # - name: Run tests with coverage
    #   run: |
    #     docker-compose exec -T app bash -c "source .venv/bin/activate \
    #     && pytest --ignore ./.venv --cov ./blog --cov-fail-under 80 --cov-report html:./__coverage"

    - name: Teardown Docker Compose
      if: always()
      run: docker-compose down


  build:
    needs: tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        load: true  
        push: false  

    - name: Run Docker Compose
      run: docker-compose up -d
